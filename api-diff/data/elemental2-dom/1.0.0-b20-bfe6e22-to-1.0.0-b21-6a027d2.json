[
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class elemental2.dom.URL",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.URL",
      "classSimpleName": "URL",
      "elementKind": "class",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class elemental2.dom.URLSearchParams",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.URLSearchParams",
      "classSimpleName": "URLSearchParams",
      "elementKind": "class",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_ATTR",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_ATTR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_ATTR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_ATTR",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_ATTR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_ATTR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_CM",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_CM",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_CM",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_CM",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_CM",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_CM",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_COUNTER",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_COUNTER",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_COUNTER",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_COUNTER",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_COUNTER",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_COUNTER",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DEG",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DEG",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_DEG",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DEG",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DEG",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_DEG",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DIMENSION",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DIMENSION",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_DIMENSION",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DIMENSION",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_DIMENSION",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_DIMENSION",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EMS",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EMS",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_EMS",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EMS",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EMS",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_EMS",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EXS",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EXS",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_EXS",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EXS",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_EXS",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_EXS",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_GRAD",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_GRAD",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_GRAD",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_GRAD",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_GRAD",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_GRAD",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_HZ",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_HZ",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_HZ",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_HZ",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_HZ",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_HZ",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IDENT",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IDENT",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_IDENT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IDENT",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IDENT",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_IDENT",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IN",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IN",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_IN",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IN",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_IN",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_IN",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_KHZ",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_KHZ",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_KHZ",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_KHZ",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_KHZ",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_KHZ",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MM",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MM",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_MM",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MM",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MM",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_MM",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MS",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MS",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_MS",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MS",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_MS",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_MS",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_NUMBER",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_NUMBER",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_NUMBER",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_NUMBER",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_NUMBER",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_NUMBER",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PC",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PC",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PC",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PC",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PC",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PC",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PERCENTAGE",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PERCENTAGE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PERCENTAGE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PERCENTAGE",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PERCENTAGE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PERCENTAGE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PT",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PT",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PT",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PT",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PT",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PX",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PX",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PX",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PX",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_PX",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PX",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RAD",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RAD",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_RAD",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RAD",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RAD",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_RAD",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RECT",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RECT",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_RECT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RECT",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RECT",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_RECT",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RGBCOLOR",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RGBCOLOR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_RGBCOLOR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RGBCOLOR",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_RGBCOLOR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_RGBCOLOR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_S",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_S",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_S",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_S",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_S",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_S",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_STRING",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_STRING",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_STRING",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_STRING",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_STRING",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_STRING",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_UNKNOWN",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_UNKNOWN",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_UNKNOWN",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_UNKNOWN",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_UNKNOWN",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_UNKNOWN",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_URI",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_URI",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_URI",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSPrimitiveValue.CSS_URI",
    "oldElement": "field elemental2.dom.CSSPrimitiveValue.CSS_URI",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_URI",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSCharsetRule",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSCharsetRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSCharsetRule",
      "classSimpleName": "CSSCharsetRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSFontFaceRule",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSFontFaceRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSFontFaceRule",
      "classSimpleName": "CSSFontFaceRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSImportRule",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSImportRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSImportRule",
      "classSimpleName": "CSSImportRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSMediaRule",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSMediaRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSMediaRule",
      "classSimpleName": "CSSMediaRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSPageRule",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSPageRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPageRule",
      "classSimpleName": "CSSPageRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSStyleRule",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSStyleRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSStyleRule",
      "classSimpleName": "CSSStyleRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSUnknownRule",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE @ elemental2.dom.CSSUnknownRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSUnknownRule",
      "classSimpleName": "CSSUnknownRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSRule.CHARSET_RULE",
    "oldElement": "field elemental2.dom.CSSRule.CHARSET_RULE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "CHARSET_RULE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSCharsetRule",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSCharsetRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSCharsetRule",
      "classSimpleName": "CSSCharsetRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSFontFaceRule",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSFontFaceRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSFontFaceRule",
      "classSimpleName": "CSSFontFaceRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSImportRule",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSImportRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSImportRule",
      "classSimpleName": "CSSImportRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSMediaRule",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSMediaRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSMediaRule",
      "classSimpleName": "CSSMediaRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSPageRule",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSPageRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPageRule",
      "classSimpleName": "CSSPageRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSStyleRule",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSStyleRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSStyleRule",
      "classSimpleName": "CSSStyleRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSUnknownRule",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE @ elemental2.dom.CSSUnknownRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSUnknownRule",
      "classSimpleName": "CSSUnknownRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE",
    "oldElement": "field elemental2.dom.CSSRule.FONT_FACE_RULE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "FONT_FACE_RULE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSCharsetRule",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSCharsetRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSCharsetRule",
      "classSimpleName": "CSSCharsetRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSFontFaceRule",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSFontFaceRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSFontFaceRule",
      "classSimpleName": "CSSFontFaceRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSImportRule",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSImportRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSImportRule",
      "classSimpleName": "CSSImportRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSMediaRule",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSMediaRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSMediaRule",
      "classSimpleName": "CSSMediaRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSPageRule",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSPageRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPageRule",
      "classSimpleName": "CSSPageRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSStyleRule",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSStyleRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSStyleRule",
      "classSimpleName": "CSSStyleRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSUnknownRule",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE @ elemental2.dom.CSSUnknownRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSUnknownRule",
      "classSimpleName": "CSSUnknownRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSRule.IMPORT_RULE",
    "oldElement": "field elemental2.dom.CSSRule.IMPORT_RULE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "IMPORT_RULE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSCharsetRule",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSCharsetRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSCharsetRule",
      "classSimpleName": "CSSCharsetRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSFontFaceRule",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSFontFaceRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSFontFaceRule",
      "classSimpleName": "CSSFontFaceRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSImportRule",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSImportRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSImportRule",
      "classSimpleName": "CSSImportRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSMediaRule",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSMediaRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSMediaRule",
      "classSimpleName": "CSSMediaRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSPageRule",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSPageRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPageRule",
      "classSimpleName": "CSSPageRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSStyleRule",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSStyleRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSStyleRule",
      "classSimpleName": "CSSStyleRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSUnknownRule",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE @ elemental2.dom.CSSUnknownRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSUnknownRule",
      "classSimpleName": "CSSUnknownRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSRule.MEDIA_RULE",
    "oldElement": "field elemental2.dom.CSSRule.MEDIA_RULE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "MEDIA_RULE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSCharsetRule",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSCharsetRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSCharsetRule",
      "classSimpleName": "CSSCharsetRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSFontFaceRule",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSFontFaceRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSFontFaceRule",
      "classSimpleName": "CSSFontFaceRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSImportRule",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSImportRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSImportRule",
      "classSimpleName": "CSSImportRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSMediaRule",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSMediaRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSMediaRule",
      "classSimpleName": "CSSMediaRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSPageRule",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSPageRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPageRule",
      "classSimpleName": "CSSPageRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSStyleRule",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSStyleRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSStyleRule",
      "classSimpleName": "CSSStyleRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSUnknownRule",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE @ elemental2.dom.CSSUnknownRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSUnknownRule",
      "classSimpleName": "CSSUnknownRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSRule.PAGE_RULE",
    "oldElement": "field elemental2.dom.CSSRule.PAGE_RULE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "PAGE_RULE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSCharsetRule",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSCharsetRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSCharsetRule",
      "classSimpleName": "CSSCharsetRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSFontFaceRule",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSFontFaceRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSFontFaceRule",
      "classSimpleName": "CSSFontFaceRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSImportRule",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSImportRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSImportRule",
      "classSimpleName": "CSSImportRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSMediaRule",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSMediaRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSMediaRule",
      "classSimpleName": "CSSMediaRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSPageRule",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSPageRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPageRule",
      "classSimpleName": "CSSPageRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSStyleRule",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSStyleRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSStyleRule",
      "classSimpleName": "CSSStyleRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSUnknownRule",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE @ elemental2.dom.CSSUnknownRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSUnknownRule",
      "classSimpleName": "CSSUnknownRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSRule.STYLE_RULE",
    "oldElement": "field elemental2.dom.CSSRule.STYLE_RULE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "STYLE_RULE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSCharsetRule",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSCharsetRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSCharsetRule",
      "classSimpleName": "CSSCharsetRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSFontFaceRule",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSFontFaceRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSFontFaceRule",
      "classSimpleName": "CSSFontFaceRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSImportRule",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSImportRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSImportRule",
      "classSimpleName": "CSSImportRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSMediaRule",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSMediaRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSMediaRule",
      "classSimpleName": "CSSMediaRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSPageRule",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSPageRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPageRule",
      "classSimpleName": "CSSPageRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSStyleRule",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSStyleRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSStyleRule",
      "classSimpleName": "CSSStyleRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSUnknownRule",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE @ elemental2.dom.CSSUnknownRule",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSUnknownRule",
      "classSimpleName": "CSSUnknownRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE",
    "oldElement": "field elemental2.dom.CSSRule.UNKNOWN_RULE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSRule",
      "classSimpleName": "CSSRule",
      "elementKind": "field",
      "fieldName": "UNKNOWN_RULE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_CUSTOM @ elemental2.dom.CSSPrimitiveValue",
    "oldElement": "field elemental2.dom.CSSValue.CSS_CUSTOM @ elemental2.dom.CSSPrimitiveValue",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_CUSTOM",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_CUSTOM @ elemental2.dom.CSSValueList",
    "oldElement": "field elemental2.dom.CSSValue.CSS_CUSTOM @ elemental2.dom.CSSValueList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValueList",
      "classSimpleName": "CSSValueList",
      "elementKind": "field",
      "fieldName": "CSS_CUSTOM",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_CUSTOM",
    "oldElement": "field elemental2.dom.CSSValue.CSS_CUSTOM",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_CUSTOM",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSValue.CSS_CUSTOM",
    "oldElement": "field elemental2.dom.CSSValue.CSS_CUSTOM",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_CUSTOM",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_INHERIT @ elemental2.dom.CSSPrimitiveValue",
    "oldElement": "field elemental2.dom.CSSValue.CSS_INHERIT @ elemental2.dom.CSSPrimitiveValue",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_INHERIT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_INHERIT @ elemental2.dom.CSSValueList",
    "oldElement": "field elemental2.dom.CSSValue.CSS_INHERIT @ elemental2.dom.CSSValueList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValueList",
      "classSimpleName": "CSSValueList",
      "elementKind": "field",
      "fieldName": "CSS_INHERIT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_INHERIT",
    "oldElement": "field elemental2.dom.CSSValue.CSS_INHERIT",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_INHERIT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSValue.CSS_INHERIT",
    "oldElement": "field elemental2.dom.CSSValue.CSS_INHERIT",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_INHERIT",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE @ elemental2.dom.CSSPrimitiveValue",
    "oldElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE @ elemental2.dom.CSSPrimitiveValue",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_PRIMITIVE_VALUE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE @ elemental2.dom.CSSValueList",
    "oldElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE @ elemental2.dom.CSSValueList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValueList",
      "classSimpleName": "CSSValueList",
      "elementKind": "field",
      "fieldName": "CSS_PRIMITIVE_VALUE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE",
    "oldElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_PRIMITIVE_VALUE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE",
    "oldElement": "field elemental2.dom.CSSValue.CSS_PRIMITIVE_VALUE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_PRIMITIVE_VALUE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST @ elemental2.dom.CSSPrimitiveValue",
    "oldElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST @ elemental2.dom.CSSPrimitiveValue",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSPrimitiveValue",
      "classSimpleName": "CSSPrimitiveValue",
      "elementKind": "field",
      "fieldName": "CSS_VALUE_LIST",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST @ elemental2.dom.CSSValueList",
    "oldElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST @ elemental2.dom.CSSValueList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValueList",
      "classSimpleName": "CSSValueList",
      "elementKind": "field",
      "fieldName": "CSS_VALUE_LIST",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST",
    "oldElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_VALUE_LIST",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST",
    "oldElement": "field elemental2.dom.CSSValue.CSS_VALUE_LIST",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CSSValue",
      "classSimpleName": "CSSValue",
      "elementKind": "field",
      "fieldName": "CSS_VALUE_LIST",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field elemental2.dom.ClipboardEvent.clipboardData",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEvent",
      "classSimpleName": "ClipboardEvent",
      "elementKind": "field",
      "fieldName": "clipboardData",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMApplicationCache.CHECKING",
    "oldElement": "field elemental2.dom.DOMApplicationCache.CHECKING",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMApplicationCache",
      "classSimpleName": "DOMApplicationCache",
      "elementKind": "field",
      "fieldName": "CHECKING",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMApplicationCache.DOWNLOADING",
    "oldElement": "field elemental2.dom.DOMApplicationCache.DOWNLOADING",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMApplicationCache",
      "classSimpleName": "DOMApplicationCache",
      "elementKind": "field",
      "fieldName": "DOWNLOADING",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMApplicationCache.IDLE",
    "oldElement": "field elemental2.dom.DOMApplicationCache.IDLE",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMApplicationCache",
      "classSimpleName": "DOMApplicationCache",
      "elementKind": "field",
      "fieldName": "IDLE",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMApplicationCache.OBSOLETE",
    "oldElement": "field elemental2.dom.DOMApplicationCache.OBSOLETE",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMApplicationCache",
      "classSimpleName": "DOMApplicationCache",
      "elementKind": "field",
      "fieldName": "OBSOLETE",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMApplicationCache.UNCACHED",
    "oldElement": "field elemental2.dom.DOMApplicationCache.UNCACHED",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMApplicationCache",
      "classSimpleName": "DOMApplicationCache",
      "elementKind": "field",
      "fieldName": "UNCACHED",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMApplicationCache.UPDATEREADY",
    "oldElement": "field elemental2.dom.DOMApplicationCache.UPDATEREADY",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMApplicationCache",
      "classSimpleName": "DOMApplicationCache",
      "elementKind": "field",
      "fieldName": "UPDATEREADY",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMApplicationCache.status",
    "oldElement": "field elemental2.dom.DOMApplicationCache.status",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMApplicationCache",
      "classSimpleName": "DOMApplicationCache",
      "elementKind": "field",
      "fieldName": "status",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_ERROR",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_ERROR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_ERROR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_ERROR",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_ERROR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_ERROR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_ERROR",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_ERROR",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_ERROR",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_FATAL_ERROR",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_FATAL_ERROR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_FATAL_ERROR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_FATAL_ERROR",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_FATAL_ERROR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_FATAL_ERROR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_FATAL_ERROR",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_FATAL_ERROR",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_FATAL_ERROR",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_WARNING",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_WARNING",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_WARNING",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_WARNING",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_WARNING",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_WARNING",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DOMError.SEVERITY_WARNING",
    "oldElement": "field elemental2.dom.DOMError.SEVERITY_WARNING",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMError",
      "classSimpleName": "DOMError",
      "elementKind": "field",
      "fieldName": "SEVERITY_WARNING",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.ABORT_ERR",
    "oldElement": "field elemental2.dom.DOMException.ABORT_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "ABORT_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.ABORT_ERR",
    "oldElement": "field elemental2.dom.DOMException.ABORT_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "ABORT_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.DATA_CLONE_ERR",
    "oldElement": "field elemental2.dom.DOMException.DATA_CLONE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "DATA_CLONE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.DATA_CLONE_ERR",
    "oldElement": "field elemental2.dom.DOMException.DATA_CLONE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "DATA_CLONE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.DOMSTRING_SIZE_ERR",
    "oldElement": "field elemental2.dom.DOMException.DOMSTRING_SIZE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "DOMSTRING_SIZE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.DOMSTRING_SIZE_ERR",
    "oldElement": "field elemental2.dom.DOMException.DOMSTRING_SIZE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "DOMSTRING_SIZE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.HIERARCHY_REQUEST_ERR",
    "oldElement": "field elemental2.dom.DOMException.HIERARCHY_REQUEST_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "HIERARCHY_REQUEST_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.HIERARCHY_REQUEST_ERR",
    "oldElement": "field elemental2.dom.DOMException.HIERARCHY_REQUEST_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "HIERARCHY_REQUEST_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.INDEX_SIZE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INDEX_SIZE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INDEX_SIZE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.INDEX_SIZE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INDEX_SIZE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INDEX_SIZE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.INUSE_ATTRIBUTE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INUSE_ATTRIBUTE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INUSE_ATTRIBUTE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.INUSE_ATTRIBUTE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INUSE_ATTRIBUTE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INUSE_ATTRIBUTE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.INVALID_ACCESS_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_ACCESS_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_ACCESS_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.INVALID_ACCESS_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_ACCESS_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_ACCESS_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.INVALID_CHARACTER_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_CHARACTER_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_CHARACTER_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.INVALID_CHARACTER_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_CHARACTER_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_CHARACTER_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.INVALID_MODIFICATION_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_MODIFICATION_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_MODIFICATION_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.INVALID_MODIFICATION_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_MODIFICATION_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_MODIFICATION_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.INVALID_NODE_TYPE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_NODE_TYPE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_NODE_TYPE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.INVALID_NODE_TYPE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_NODE_TYPE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_NODE_TYPE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.INVALID_STATE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_STATE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_STATE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.INVALID_STATE_ERR",
    "oldElement": "field elemental2.dom.DOMException.INVALID_STATE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "INVALID_STATE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.NAMESPACE_ERR",
    "oldElement": "field elemental2.dom.DOMException.NAMESPACE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NAMESPACE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.NAMESPACE_ERR",
    "oldElement": "field elemental2.dom.DOMException.NAMESPACE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NAMESPACE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.NETWORK_ERR",
    "oldElement": "field elemental2.dom.DOMException.NETWORK_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NETWORK_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.NETWORK_ERR",
    "oldElement": "field elemental2.dom.DOMException.NETWORK_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NETWORK_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.NOT_FOUND_ERR",
    "oldElement": "field elemental2.dom.DOMException.NOT_FOUND_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NOT_FOUND_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.NOT_FOUND_ERR",
    "oldElement": "field elemental2.dom.DOMException.NOT_FOUND_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NOT_FOUND_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.NOT_SUPPORTED_ERR",
    "oldElement": "field elemental2.dom.DOMException.NOT_SUPPORTED_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NOT_SUPPORTED_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.NOT_SUPPORTED_ERR",
    "oldElement": "field elemental2.dom.DOMException.NOT_SUPPORTED_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NOT_SUPPORTED_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.NO_DATA_ALLOWED_ERR",
    "oldElement": "field elemental2.dom.DOMException.NO_DATA_ALLOWED_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NO_DATA_ALLOWED_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.NO_DATA_ALLOWED_ERR",
    "oldElement": "field elemental2.dom.DOMException.NO_DATA_ALLOWED_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NO_DATA_ALLOWED_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR",
    "oldElement": "field elemental2.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NO_MODIFICATION_ALLOWED_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR",
    "oldElement": "field elemental2.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "NO_MODIFICATION_ALLOWED_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.QUOTA_EXCEEDED_ERR",
    "oldElement": "field elemental2.dom.DOMException.QUOTA_EXCEEDED_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "QUOTA_EXCEEDED_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.QUOTA_EXCEEDED_ERR",
    "oldElement": "field elemental2.dom.DOMException.QUOTA_EXCEEDED_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "QUOTA_EXCEEDED_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.SECURITY_ERR",
    "oldElement": "field elemental2.dom.DOMException.SECURITY_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "SECURITY_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.SECURITY_ERR",
    "oldElement": "field elemental2.dom.DOMException.SECURITY_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "SECURITY_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.SYNTAX_ERR",
    "oldElement": "field elemental2.dom.DOMException.SYNTAX_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "SYNTAX_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.SYNTAX_ERR",
    "oldElement": "field elemental2.dom.DOMException.SYNTAX_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "SYNTAX_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.TIMEOUT_ERR",
    "oldElement": "field elemental2.dom.DOMException.TIMEOUT_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "TIMEOUT_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.TIMEOUT_ERR",
    "oldElement": "field elemental2.dom.DOMException.TIMEOUT_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "TIMEOUT_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.TYPE_MISMATCH_ERR",
    "oldElement": "field elemental2.dom.DOMException.TYPE_MISMATCH_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "TYPE_MISMATCH_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.TYPE_MISMATCH_ERR",
    "oldElement": "field elemental2.dom.DOMException.TYPE_MISMATCH_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "TYPE_MISMATCH_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.URL_MISMATCH_ERR",
    "oldElement": "field elemental2.dom.DOMException.URL_MISMATCH_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "URL_MISMATCH_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.URL_MISMATCH_ERR",
    "oldElement": "field elemental2.dom.DOMException.URL_MISMATCH_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "URL_MISMATCH_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.VALIDATION_ERR",
    "oldElement": "field elemental2.dom.DOMException.VALIDATION_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "VALIDATION_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.VALIDATION_ERR",
    "oldElement": "field elemental2.dom.DOMException.VALIDATION_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "VALIDATION_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.DOMException.WRONG_DOCUMENT_ERR",
    "oldElement": "field elemental2.dom.DOMException.WRONG_DOCUMENT_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "WRONG_DOCUMENT_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.DOMException.WRONG_DOCUMENT_ERR",
    "oldElement": "field elemental2.dom.DOMException.WRONG_DOCUMENT_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "WRONG_DOCUMENT_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field elemental2.dom.DOMException.message",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "message",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field elemental2.dom.DOMException.name",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMException",
      "classSimpleName": "DOMException",
      "elementKind": "field",
      "fieldName": "name",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.Document.childElementCount",
    "oldElement": "field elemental2.dom.Document.childElementCount",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Document",
      "classSimpleName": "Document",
      "elementKind": "field",
      "fieldName": "childElementCount",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.DocumentFragment.childElementCount",
    "oldElement": "field elemental2.dom.DocumentFragment.childElementCount",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "field",
      "fieldName": "childElementCount",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAnchorElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAppletElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAppletElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLAppletElement",
      "classSimpleName": "HTMLAppletElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAreaElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAudioElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBRElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBaseElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBaseFontElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBaseFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLBaseFontElement",
      "classSimpleName": "HTMLBaseFontElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBodyElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLButtonElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLCanvasElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLContentElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLContentElement",
      "classSimpleName": "HTMLContentElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDListElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDataListElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDetailsElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDialogElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDirectoryElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDivElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLEmbedElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFieldSetElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFontElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFormElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFrameElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFrameSetElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHRElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHeadElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHeadingElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHtmlElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLIFrameElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLImageElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLInputElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLIsIndexElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLIsIndexElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLIsIndexElement",
      "classSimpleName": "HTMLIsIndexElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLIElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLabelElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLegendElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLinkElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMapElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMediaElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMenuElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMenuItemElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMenuItemElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLMenuItemElement",
      "classSimpleName": "HTMLMenuItemElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMetaElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMeterElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLModElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOListElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLObjectElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOptGroupElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOptionElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOutputElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLParagraphElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLParamElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLPictureElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLPreElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLProgressElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLQuoteElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLScriptElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLSelectElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLShadowElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLShadowElement",
      "classSimpleName": "HTMLShadowElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLSlotElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLSourceElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLStyleElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableCaptionElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableCellElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableColElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableRowElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableSectionElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTemplateElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTextAreaElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTitleElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTrackElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLUListElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLUnknownElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLVideoElement",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.Image",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT @ elemental2.dom.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.Image",
      "classSimpleName": "Image",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.Element",
      "classSimpleName": "Element",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Element",
      "classSimpleName": "Element",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT",
    "oldElement": "field elemental2.dom.Element.ALLOW_KEYBOARD_INPUT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Element",
      "classSimpleName": "Element",
      "elementKind": "field",
      "fieldName": "ALLOW_KEYBOARD_INPUT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.Element.childElementCount",
    "oldElement": "field elemental2.dom.Element.childElementCount",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Element",
      "classSimpleName": "Element",
      "elementKind": "field",
      "fieldName": "childElementCount",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.EventSource.CLOSED",
    "oldElement": "field elemental2.dom.EventSource.CLOSED",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CLOSED",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.EventSource.CLOSED",
    "oldElement": "field elemental2.dom.EventSource.CLOSED",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CLOSED",
      "newModifiers": "public static final",
      "oldModifiers": "public",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowStatic",
    "description": "Field is now static.",
    "newElement": "field elemental2.dom.EventSource.CLOSED",
    "oldElement": "field elemental2.dom.EventSource.CLOSED",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CLOSED",
      "newModifiers": "public static final",
      "oldModifiers": "public",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.EventSource.CLOSED",
    "oldElement": "field elemental2.dom.EventSource.CLOSED",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CLOSED",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.EventSource.CONNECTING",
    "oldElement": "field elemental2.dom.EventSource.CONNECTING",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CONNECTING",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.EventSource.CONNECTING",
    "oldElement": "field elemental2.dom.EventSource.CONNECTING",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CONNECTING",
      "newModifiers": "public static final",
      "oldModifiers": "public",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowStatic",
    "description": "Field is now static.",
    "newElement": "field elemental2.dom.EventSource.CONNECTING",
    "oldElement": "field elemental2.dom.EventSource.CONNECTING",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CONNECTING",
      "newModifiers": "public static final",
      "oldModifiers": "public",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.EventSource.CONNECTING",
    "oldElement": "field elemental2.dom.EventSource.CONNECTING",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "CONNECTING",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.EventSource.OPEN",
    "oldElement": "field elemental2.dom.EventSource.OPEN",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "OPEN",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.EventSource.OPEN",
    "oldElement": "field elemental2.dom.EventSource.OPEN",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "OPEN",
      "newModifiers": "public static final",
      "oldModifiers": "public",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowStatic",
    "description": "Field is now static.",
    "newElement": "field elemental2.dom.EventSource.OPEN",
    "oldElement": "field elemental2.dom.EventSource.OPEN",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "OPEN",
      "newModifiers": "public static final",
      "oldModifiers": "public",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.EventSource.OPEN",
    "oldElement": "field elemental2.dom.EventSource.OPEN",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "OPEN",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field elemental2.dom.HTMLAnchorElement.relList",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "field",
      "fieldName": "relList",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_ABORTED",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_ABORTED",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_ABORTED",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_ABORTED",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_ABORTED",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_ABORTED",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_ABORTED",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_ABORTED",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_ABORTED",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_DECODE",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_DECODE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_DECODE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_DECODE",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_DECODE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_DECODE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_DECODE",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_DECODE",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_DECODE",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_NETWORK",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_NETWORK",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_NETWORK",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_NETWORK",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_NETWORK",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_NETWORK",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_NETWORK",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_NETWORK",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_NETWORK",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "newElement": "field elemental2.dom.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED",
    "oldElement": "field elemental2.dom.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.MediaError",
      "classSimpleName": "MediaError",
      "elementKind": "field",
      "fieldName": "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathException.INVALID_EXPRESSION_ERR",
    "oldElement": "field elemental2.dom.XPathException.INVALID_EXPRESSION_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathException",
      "classSimpleName": "XPathException",
      "elementKind": "field",
      "fieldName": "INVALID_EXPRESSION_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathException.INVALID_EXPRESSION_ERR",
    "oldElement": "field elemental2.dom.XPathException.INVALID_EXPRESSION_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathException",
      "classSimpleName": "XPathException",
      "elementKind": "field",
      "fieldName": "INVALID_EXPRESSION_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathException.TYPE_ERR",
    "oldElement": "field elemental2.dom.XPathException.TYPE_ERR",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathException",
      "classSimpleName": "XPathException",
      "elementKind": "field",
      "fieldName": "TYPE_ERR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathException.TYPE_ERR",
    "oldElement": "field elemental2.dom.XPathException.TYPE_ERR",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathException",
      "classSimpleName": "XPathException",
      "elementKind": "field",
      "fieldName": "TYPE_ERR",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathNamespace.XPATH_NAMESPACE_NODE",
    "oldElement": "field elemental2.dom.XPathNamespace.XPATH_NAMESPACE_NODE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathNamespace",
      "classSimpleName": "XPathNamespace",
      "elementKind": "field",
      "fieldName": "XPATH_NAMESPACE_NODE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathNamespace.XPATH_NAMESPACE_NODE",
    "oldElement": "field elemental2.dom.XPathNamespace.XPATH_NAMESPACE_NODE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathNamespace",
      "classSimpleName": "XPathNamespace",
      "elementKind": "field",
      "fieldName": "XPATH_NAMESPACE_NODE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.ANY_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ANY_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ANY_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.ANY_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ANY_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ANY_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.ANY_UNORDERED_NODE_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ANY_UNORDERED_NODE_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ANY_UNORDERED_NODE_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.ANY_UNORDERED_NODE_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ANY_UNORDERED_NODE_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ANY_UNORDERED_NODE_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.BOOLEAN_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.BOOLEAN_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "BOOLEAN_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.BOOLEAN_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.BOOLEAN_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "BOOLEAN_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.FIRST_ORDERED_NODE_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.FIRST_ORDERED_NODE_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "FIRST_ORDERED_NODE_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.FIRST_ORDERED_NODE_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.FIRST_ORDERED_NODE_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "FIRST_ORDERED_NODE_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.NUMBER_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.NUMBER_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "NUMBER_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.NUMBER_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.NUMBER_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "NUMBER_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.ORDERED_NODE_ITERATOR_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ORDERED_NODE_ITERATOR_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ORDERED_NODE_ITERATOR_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.ORDERED_NODE_ITERATOR_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ORDERED_NODE_ITERATOR_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ORDERED_NODE_ITERATOR_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.ORDERED_NODE_SNAPSHOT_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ORDERED_NODE_SNAPSHOT_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ORDERED_NODE_SNAPSHOT_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.ORDERED_NODE_SNAPSHOT_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.ORDERED_NODE_SNAPSHOT_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "ORDERED_NODE_SNAPSHOT_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.STRING_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.STRING_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "STRING_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.STRING_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.STRING_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "STRING_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_ITERATOR_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_ITERATOR_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "UNORDERED_NODE_ITERATOR_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_ITERATOR_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_ITERATOR_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "UNORDERED_NODE_ITERATOR_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "UNORDERED_NODE_SNAPSHOT_TYPE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.nowFinal",
    "description": "Field is now final.",
    "newElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE",
    "oldElement": "field elemental2.dom.XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.XPathResult",
      "classSimpleName": "XPathResult",
      "elementKind": "field",
      "fieldName": "UNORDERED_NODE_SNAPSHOT_TYPE",
      "newModifiers": "public static final",
      "oldModifiers": "public static",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType",
      "classSimpleName": "SetFillColorAUnionType",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType",
      "classSimpleName": "SetStrokeColorAUnionType",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'elemental2.dom.EventInit'.",
    "newElement": "interface elemental2.dom.ClipboardEventInit",
    "oldElement": "interface elemental2.dom.ClipboardEventInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "interface",
      "interface": "elemental2.dom.EventInit",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface elemental2.dom.PositionCallback",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.PositionCallback",
      "classSimpleName": "PositionCallback",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface elemental2.dom.PositionErrorCallback",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.PositionErrorCallback",
      "classSimpleName": "PositionErrorCallback",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface elemental2.dom.RTCStatsReport.EntriesJsIteratorIterableTypeParameterArrayUnionType",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RTCStatsReport.EntriesJsIteratorIterableTypeParameterArrayUnionType",
      "classSimpleName": "EntriesJsIteratorIterableTypeParameterArrayUnionType",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface elemental2.dom.WebSocket.OnmessageFn.EventMessageEventTypeParameterUnionType",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.WebSocket.OnmessageFn.EventMessageEventTypeParameterUnionType",
      "classSimpleName": "EventMessageEventTypeParameterUnionType",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean elemental2.dom.DOMTokenList::supports(java.lang.String)",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DOMTokenList",
      "classSimpleName": "DOMTokenList",
      "elementKind": "method",
      "methodName": "supports",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method boolean elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType::isObjectArray()",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType",
      "classSimpleName": "PostMessageTargetOriginOrPortsOrTransferUnionType",
      "elementKind": "method",
      "methodName": "isObjectArray",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'elemental2.dom.ClipboardEventInit' but is now declared in superclass 'elemental2.dom.EventInit'.",
    "newElement": "method boolean elemental2.dom.EventInit::isBubbles() @ elemental2.dom.ClipboardEventInit",
    "oldElement": "method boolean elemental2.dom.ClipboardEventInit::isBubbles()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "isBubbles",
      "newClass": "elemental2.dom.EventInit",
      "oldClass": "elemental2.dom.ClipboardEventInit",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'elemental2.dom.ClipboardEventInit' but is now declared in superclass 'elemental2.dom.EventInit'.",
    "newElement": "method boolean elemental2.dom.EventInit::isCancelable() @ elemental2.dom.ClipboardEventInit",
    "oldElement": "method boolean elemental2.dom.ClipboardEventInit::isCancelable()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "isCancelable",
      "newClass": "elemental2.dom.EventInit",
      "oldClass": "elemental2.dom.ClipboardEventInit",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean elemental2.dom.RTCStatsReport::has(java.lang.String)",
    "oldElement": null,
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "has",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method boolean elemental2.dom.RequestInit.GetBodyUnionType::isURLSearchParams()",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RequestInit.GetBodyUnionType",
      "classSimpleName": "GetBodyUnionType",
      "elementKind": "method",
      "methodName": "isURLSearchParams",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method boolean elemental2.dom.Response.ConstructorBodyUnionType::isURLSearchParams()",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response.ConstructorBodyUnionType",
      "classSimpleName": "ConstructorBodyUnionType",
      "elementKind": "method",
      "methodName": "isURLSearchParams",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method double elemental2.dom.RTCStatsReport::getSize()",
    "oldElement": null,
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "getSize",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method elemental2.core.JsIteratorIterable<elemental2.dom.RTCStats> elemental2.dom.RTCStatsReport::values()",
    "oldElement": null,
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "values",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method elemental2.core.JsIteratorIterable<elemental2.dom.RTCStatsReport.EntriesJsIteratorIterableTypeParameterArrayUnionType[]> elemental2.dom.RTCStatsReport::entries(java.lang.String)",
    "oldElement": null,
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "entries",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method elemental2.dom.DataTransfer elemental2.dom.ClipboardEventInit::getClipboardData()",
    "oldElement": null,
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "getClipboardData",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method elemental2.dom.URLSearchParams elemental2.dom.RequestInit.GetBodyUnionType::asURLSearchParams()",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RequestInit.GetBodyUnionType",
      "classSimpleName": "GetBodyUnionType",
      "elementKind": "method",
      "methodName": "asURLSearchParams",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method elemental2.dom.URLSearchParams elemental2.dom.Response.ConstructorBodyUnionType::asURLSearchParams()",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response.ConstructorBodyUnionType",
      "classSimpleName": "ConstructorBodyUnionType",
      "elementKind": "method",
      "methodName": "asURLSearchParams",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method java.lang.Object[] elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType::asObjectArray()",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType",
      "classSimpleName": "PostMessageTargetOriginOrPortsOrTransferUnionType",
      "elementKind": "method",
      "methodName": "asObjectArray",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor()",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(double, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(java.lang.String, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setFillColor(elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType, double, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setFillColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor()",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(double, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.nowFinal",
    "description": "Method is now final.",
    "newElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(java.lang.String, double, double, double, double)",
    "oldElement": "method void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType, double, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "setStrokeColor",
      "newModifiers": "public final",
      "oldModifiers": "public native",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void elemental2.dom.ClipboardEventInit::setClipboardData(elemental2.dom.DataTransfer)",
    "oldElement": null,
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "setClipboardData",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void elemental2.dom.Console::countReset()",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Console",
      "classSimpleName": "Console",
      "elementKind": "method",
      "methodName": "countReset",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void elemental2.dom.Console::countReset(java.lang.String)",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Console",
      "classSimpleName": "Console",
      "elementKind": "method",
      "methodName": "countReset",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void elemental2.dom.Console::dir(java.lang.Object)",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Console",
      "classSimpleName": "Console",
      "elementKind": "method",
      "methodName": "dir",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void elemental2.dom.Console::dirxml(java.lang.Object[])",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Console",
      "classSimpleName": "Console",
      "elementKind": "method",
      "methodName": "dirxml",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void elemental2.dom.Console::timeLog(java.lang.String, java.lang.Object[])",
    "oldElement": null,
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Console",
      "classSimpleName": "Console",
      "elementKind": "method",
      "methodName": "timeLog",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'elemental2.dom.ClipboardEventInit' but is now declared in superclass 'elemental2.dom.EventInit'.",
    "newElement": "method void elemental2.dom.EventInit::setBubbles(boolean) @ elemental2.dom.ClipboardEventInit",
    "oldElement": "method void elemental2.dom.ClipboardEventInit::setBubbles(boolean)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "setBubbles",
      "newClass": "elemental2.dom.EventInit",
      "oldClass": "elemental2.dom.ClipboardEventInit",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'elemental2.dom.ClipboardEventInit' but is now declared in superclass 'elemental2.dom.EventInit'.",
    "newElement": "method void elemental2.dom.EventInit::setCancelable(boolean) @ elemental2.dom.ClipboardEventInit",
    "oldElement": "method void elemental2.dom.ClipboardEventInit::setCancelable(boolean)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "setCancelable",
      "newClass": "elemental2.dom.EventInit",
      "oldClass": "elemental2.dom.ClipboardEventInit",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'java.lang.Object' to  'void'.",
    "newElement": "method void elemental2.dom.EventSource.OnerrorFn::onInvoke(elemental2.dom.Event)",
    "oldElement": "method java.lang.Object elemental2.dom.EventSource.OnerrorFn::onInvoke(elemental2.dom.Event)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource.OnerrorFn",
      "classSimpleName": "OnerrorFn",
      "elementKind": "method",
      "methodName": "onInvoke",
      "newType": "void",
      "oldType": "java.lang.Object",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'java.lang.Object' to  'void'.",
    "newElement": "method void elemental2.dom.EventSource.OnmessageFn::onInvoke(elemental2.dom.MessageEvent<java.lang.String>)",
    "oldElement": "method java.lang.Object elemental2.dom.EventSource.OnmessageFn::onInvoke(elemental2.dom.MessageEvent<java.lang.Object>)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource.OnmessageFn",
      "classSimpleName": "OnmessageFn",
      "elementKind": "method",
      "methodName": "onInvoke",
      "newType": "void",
      "oldType": "java.lang.Object",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'java.lang.Object' to  'void'.",
    "newElement": "method void elemental2.dom.EventSource.OnopenFn::onInvoke(elemental2.dom.Event)",
    "oldElement": "method java.lang.Object elemental2.dom.EventSource.OnopenFn::onInvoke(elemental2.dom.Event)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource.OnopenFn",
      "classSimpleName": "OnopenFn",
      "elementKind": "method",
      "methodName": "onInvoke",
      "newType": "void",
      "oldType": "java.lang.Object",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.removed",
    "description": "Field removed from class.",
    "newElement": null,
    "oldElement": "field elemental2.dom.EventSource.clipboardData",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource",
      "classSimpleName": "EventSource",
      "elementKind": "field",
      "fieldName": "clipboardData",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.field.removed",
    "description": "Field removed from class.",
    "newElement": null,
    "oldElement": "field elemental2.dom.Node.XPATH_NAMESPACE_NODE",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Node",
      "classSimpleName": "Node",
      "elementKind": "field",
      "fieldName": "XPATH_NAMESPACE_NODE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "newElement": null,
    "oldElement": "interface elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType",
      "classSimpleName": "SetFillColorP0UnionType",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "newElement": null,
    "oldElement": "interface elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType",
      "classSimpleName": "SetStrokeColorP0UnionType",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "newElement": null,
    "oldElement": "interface elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn",
      "classSimpleName": "GetCurrentPositionErrorCallbackFn",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "newElement": null,
    "oldElement": "interface elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn",
      "classSimpleName": "GetCurrentPositionSuccessCallbackFn",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "newElement": null,
    "oldElement": "interface elemental2.dom.Geolocation.WatchPositionErrorCallbackFn",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation.WatchPositionErrorCallbackFn",
      "classSimpleName": "WatchPositionErrorCallbackFn",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "newElement": null,
    "oldElement": "interface elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn",
      "classSimpleName": "WatchPositionSuccessCallbackFn",
      "elementKind": "interface",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method boolean elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType::isJsArray()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType",
      "classSimpleName": "PostMessageTargetOriginOrPortsOrTransferUnionType",
      "elementKind": "method",
      "methodName": "isJsArray",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method boolean elemental2.dom.RequestInit.GetBodyUnionType::isObject()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RequestInit.GetBodyUnionType",
      "classSimpleName": "GetBodyUnionType",
      "elementKind": "method",
      "methodName": "isObject",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method boolean elemental2.dom.Response.ConstructorBodyUnionType::isObject()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response.ConstructorBodyUnionType",
      "classSimpleName": "ConstructorBodyUnionType",
      "elementKind": "method",
      "methodName": "isObject",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method elemental2.core.JsArray elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType::asJsArray()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType",
      "classSimpleName": "PostMessageTargetOriginOrPortsOrTransferUnionType",
      "elementKind": "method",
      "methodName": "asJsArray",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method java.lang.Object elemental2.dom.RequestInit.GetBodyUnionType::asObject()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RequestInit.GetBodyUnionType",
      "classSimpleName": "GetBodyUnionType",
      "elementKind": "method",
      "methodName": "asObject",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method java.lang.Object elemental2.dom.Response.ConstructorBodyUnionType::asObject()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response.ConstructorBodyUnionType",
      "classSimpleName": "ConstructorBodyUnionType",
      "elementKind": "method",
      "methodName": "asObject",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method java.lang.String elemental2.dom.ClipboardEventInit::getData()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "getData",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method java.lang.String elemental2.dom.ClipboardEventInit::getDataType()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "getDataType",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method void elemental2.dom.ClipboardEventInit::setData(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "setData",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method void elemental2.dom.ClipboardEventInit::setDataType(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.ClipboardEventInit",
      "classSimpleName": "ClipboardEventInit",
      "elementKind": "method",
      "methodName": "setDataType",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method void elemental2.dom.GeolocationPositionError::setPERMISSION_DENIED(double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.GeolocationPositionError",
      "classSimpleName": "GeolocationPositionError",
      "elementKind": "method",
      "methodName": "setPERMISSION_DENIED",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method void elemental2.dom.GeolocationPositionError::setPOSITION_UNAVAILABLE(double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.GeolocationPositionError",
      "classSimpleName": "GeolocationPositionError",
      "elementKind": "method",
      "methodName": "setPOSITION_UNAVAILABLE",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method void elemental2.dom.GeolocationPositionError::setTIMEOUT(double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.GeolocationPositionError",
      "classSimpleName": "GeolocationPositionError",
      "elementKind": "method",
      "methodName": "setTIMEOUT",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "newElement": null,
    "oldElement": "method void elemental2.dom.GeolocationPositionError::setUNKNOWN_ERROR(double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.GeolocationPositionError",
      "classSimpleName": "GeolocationPositionError",
      "elementKind": "method",
      "methodName": "setUNKNOWN_ERROR",
      "package": "elemental2.dom"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn' to 'elemental2.dom.PositionCallback'.",
    "newElement": "parameter int elemental2.dom.Geolocation::watchPosition(===elemental2.dom.PositionCallback===)",
    "oldElement": "parameter int elemental2.dom.Geolocation::watchPosition(===elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "newType": "elemental2.dom.PositionCallback",
      "oldType": "elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn' to 'elemental2.dom.PositionCallback'.",
    "newElement": "parameter int elemental2.dom.Geolocation::watchPosition(===elemental2.dom.PositionCallback===, elemental2.dom.PositionErrorCallback)",
    "oldElement": "parameter int elemental2.dom.Geolocation::watchPosition(===elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn===, elemental2.dom.Geolocation.WatchPositionErrorCallbackFn)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "newType": "elemental2.dom.PositionCallback",
      "oldType": "elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn' to 'elemental2.dom.PositionCallback'.",
    "newElement": "parameter int elemental2.dom.Geolocation::watchPosition(===elemental2.dom.PositionCallback===, elemental2.dom.PositionErrorCallback, elemental2.dom.GeolocationPositionOptions)",
    "oldElement": "parameter int elemental2.dom.Geolocation::watchPosition(===elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn===, elemental2.dom.Geolocation.WatchPositionErrorCallbackFn, elemental2.dom.GeolocationPositionOptions)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "newType": "elemental2.dom.PositionCallback",
      "oldType": "elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.WatchPositionErrorCallbackFn' to 'elemental2.dom.PositionErrorCallback'.",
    "newElement": "parameter int elemental2.dom.Geolocation::watchPosition(elemental2.dom.PositionCallback, ===elemental2.dom.PositionErrorCallback===)",
    "oldElement": "parameter int elemental2.dom.Geolocation::watchPosition(elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn, ===elemental2.dom.Geolocation.WatchPositionErrorCallbackFn===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "newType": "elemental2.dom.PositionErrorCallback",
      "oldType": "elemental2.dom.Geolocation.WatchPositionErrorCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.WatchPositionErrorCallbackFn' to 'elemental2.dom.PositionErrorCallback'.",
    "newElement": "parameter int elemental2.dom.Geolocation::watchPosition(elemental2.dom.PositionCallback, ===elemental2.dom.PositionErrorCallback===, elemental2.dom.GeolocationPositionOptions)",
    "oldElement": "parameter int elemental2.dom.Geolocation::watchPosition(elemental2.dom.Geolocation.WatchPositionSuccessCallbackFn, ===elemental2.dom.Geolocation.WatchPositionErrorCallbackFn===, elemental2.dom.GeolocationPositionOptions)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "newType": "elemental2.dom.PositionErrorCallback",
      "oldType": "elemental2.dom.Geolocation.WatchPositionErrorCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType===)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType===, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType===, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType===, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType===, double, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType===, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType===, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType===, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===java.lang.String===, double, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setFillColor(===elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType===, double, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setFillColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetFillColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType===)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType===, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType===, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType===, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType===, double, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorAUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType===, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType===, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType===, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===java.lang.String===, double, double, double, double)",
    "oldElement": "parameter void elemental2.dom.CanvasRenderingContext2D::setStrokeColor(===elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType===, double, double, double, double)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "parameter",
      "methodName": "setStrokeColor",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.CanvasRenderingContext2D.SetStrokeColorP0UnionType",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.core.Transferable[]'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===elemental2.core.Transferable[]===, java.lang.Object[])",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===java.lang.String===, java.lang.String)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "elemental2.core.Transferable[]",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType===, java.lang.Object[])",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===java.lang.String===, elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===java.lang.String===, java.lang.Object[])",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType===, java.lang.String)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "java.lang.String",
      "oldType": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.core.Transferable[]' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===java.lang.String===, java.lang.String)",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, ===elemental2.core.Transferable[]===, java.lang.String)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "java.lang.String",
      "oldType": "elemental2.core.Transferable[]",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'java.lang.Object[]'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, elemental2.core.Transferable[], ===java.lang.Object[]===)",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, java.lang.String, ===java.lang.String===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "java.lang.Object[]",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.core.JsArray' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, elemental2.core.Transferable[], ===java.lang.String===)",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, elemental2.core.Transferable[], ===elemental2.core.JsArray===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "java.lang.String",
      "oldType": "elemental2.core.JsArray",
      "package": "elemental2.dom",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType' to 'java.lang.Object[]'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType, ===java.lang.Object[]===)",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, java.lang.String, ===elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "java.lang.Object[]",
      "oldType": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType",
      "package": "elemental2.dom",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.core.JsArray' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType, ===java.lang.String===)",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType, ===elemental2.core.JsArray===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "java.lang.String",
      "oldType": "elemental2.core.JsArray",
      "package": "elemental2.dom",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.core.JsArray' to 'elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, java.lang.String, ===elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType===)",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, java.lang.String, ===elemental2.core.JsArray===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "elemental2.dom.DomGlobal.PostMessageTargetOriginOrPortsOrTransferUnionType",
      "oldType": "elemental2.core.JsArray",
      "package": "elemental2.dom",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'java.lang.Object[]'.",
    "newElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, java.lang.String, ===java.lang.Object[]===)",
    "oldElement": "parameter void elemental2.dom.DomGlobal::postMessage(java.lang.Object, elemental2.dom.DomGlobal.PostMessageTargetOriginOrTransferUnionType, ===java.lang.String===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.DomGlobal",
      "classSimpleName": "DomGlobal",
      "elementKind": "parameter",
      "methodName": "postMessage",
      "newType": "java.lang.Object[]",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'double' to 'int'.",
    "newElement": "parameter void elemental2.dom.Element::webkitRequestFullScreen(===int===)",
    "oldElement": "parameter void elemental2.dom.Element::webkitRequestFullScreen(===double===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Element",
      "classSimpleName": "Element",
      "elementKind": "parameter",
      "methodName": "webkitRequestFullScreen",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'double' to 'int'.",
    "newElement": "parameter void elemental2.dom.Element::webkitRequestFullscreen(===int===)",
    "oldElement": "parameter void elemental2.dom.Element::webkitRequestFullscreen(===double===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Element",
      "classSimpleName": "Element",
      "elementKind": "parameter",
      "methodName": "webkitRequestFullscreen",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'elemental2.dom.MessageEvent<java.lang.Object>'while the new type is 'elemental2.dom.MessageEvent<java.lang.String>'.",
    "newElement": "parameter void elemental2.dom.EventSource.OnmessageFn::onInvoke(===elemental2.dom.MessageEvent<java.lang.String>===)",
    "oldElement": "parameter java.lang.Object elemental2.dom.EventSource.OnmessageFn::onInvoke(===elemental2.dom.MessageEvent<java.lang.Object>===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.EventSource.OnmessageFn",
      "classSimpleName": "OnmessageFn",
      "elementKind": "parameter",
      "methodName": "onInvoke",
      "newType": "elemental2.dom.MessageEvent<java.lang.String>",
      "oldType": "elemental2.dom.MessageEvent<java.lang.Object>",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn' to 'elemental2.dom.PositionCallback'.",
    "newElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(===elemental2.dom.PositionCallback===)",
    "oldElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(===elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "newType": "elemental2.dom.PositionCallback",
      "oldType": "elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn' to 'elemental2.dom.PositionCallback'.",
    "newElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(===elemental2.dom.PositionCallback===, elemental2.dom.PositionErrorCallback)",
    "oldElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(===elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn===, elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "newType": "elemental2.dom.PositionCallback",
      "oldType": "elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn' to 'elemental2.dom.PositionCallback'.",
    "newElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(===elemental2.dom.PositionCallback===, elemental2.dom.PositionErrorCallback, elemental2.dom.GeolocationPositionOptions)",
    "oldElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(===elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn===, elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn, elemental2.dom.GeolocationPositionOptions)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "newType": "elemental2.dom.PositionCallback",
      "oldType": "elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn' to 'elemental2.dom.PositionErrorCallback'.",
    "newElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(elemental2.dom.PositionCallback, ===elemental2.dom.PositionErrorCallback===)",
    "oldElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn, ===elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "newType": "elemental2.dom.PositionErrorCallback",
      "oldType": "elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn' to 'elemental2.dom.PositionErrorCallback'.",
    "newElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(elemental2.dom.PositionCallback, ===elemental2.dom.PositionErrorCallback===, elemental2.dom.GeolocationPositionOptions)",
    "oldElement": "parameter void elemental2.dom.Geolocation::getCurrentPosition(elemental2.dom.Geolocation.GetCurrentPositionSuccessCallbackFn, ===elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn===, elemental2.dom.GeolocationPositionOptions)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "newType": "elemental2.dom.PositionErrorCallback",
      "oldType": "elemental2.dom.Geolocation.GetCurrentPositionErrorCallbackFn",
      "package": "elemental2.dom",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.URLSearchParams'.",
    "newElement": "parameter void elemental2.dom.RequestInit::setBody(===elemental2.dom.URLSearchParams===)",
    "oldElement": "parameter void elemental2.dom.RequestInit::setBody(===java.lang.String===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RequestInit",
      "classSimpleName": "RequestInit",
      "elementKind": "parameter",
      "methodName": "setBody",
      "newType": "elemental2.dom.URLSearchParams",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.Object' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.RequestInit::setBody(===java.lang.String===)",
    "oldElement": "parameter void elemental2.dom.RequestInit::setBody(===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.RequestInit",
      "classSimpleName": "RequestInit",
      "elementKind": "parameter",
      "methodName": "setBody",
      "newType": "java.lang.String",
      "oldType": "java.lang.Object",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.URLSearchParams'.",
    "newElement": "parameter void elemental2.dom.Response::<init>(===elemental2.dom.URLSearchParams===)",
    "oldElement": "parameter void elemental2.dom.Response::<init>(===java.lang.String===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response",
      "classSimpleName": "Response",
      "elementKind": "parameter",
      "methodName": "<init>",
      "newType": "elemental2.dom.URLSearchParams",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'elemental2.dom.URLSearchParams'.",
    "newElement": "parameter void elemental2.dom.Response::<init>(===elemental2.dom.URLSearchParams===, elemental2.dom.ResponseInit)",
    "oldElement": "parameter void elemental2.dom.Response::<init>(===java.lang.String===, elemental2.dom.ResponseInit)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response",
      "classSimpleName": "Response",
      "elementKind": "parameter",
      "methodName": "<init>",
      "newType": "elemental2.dom.URLSearchParams",
      "oldType": "java.lang.String",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.Object' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.Response::<init>(===java.lang.String===)",
    "oldElement": "parameter void elemental2.dom.Response::<init>(===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response",
      "classSimpleName": "Response",
      "elementKind": "parameter",
      "methodName": "<init>",
      "newType": "java.lang.String",
      "oldType": "java.lang.Object",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.Object' to 'java.lang.String'.",
    "newElement": "parameter void elemental2.dom.Response::<init>(===java.lang.String===, elemental2.dom.ResponseInit)",
    "oldElement": "parameter void elemental2.dom.Response::<init>(===java.lang.Object===, elemental2.dom.ResponseInit)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.Response",
      "classSimpleName": "Response",
      "elementKind": "parameter",
      "methodName": "<init>",
      "newType": "java.lang.String",
      "oldType": "java.lang.Object",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'elemental2.dom.MessageEvent<java.lang.Object>'while the new type is 'elemental2.dom.MessageEvent<elemental2.dom.WebSocket.OnmessageFn.EventMessageEventTypeParameterUnionType>'.",
    "newElement": "parameter void elemental2.dom.WebSocket.OnmessageFn::onInvoke(===elemental2.dom.MessageEvent<elemental2.dom.WebSocket.OnmessageFn.EventMessageEventTypeParameterUnionType>===)",
    "oldElement": "parameter void elemental2.dom.WebSocket.OnmessageFn::onInvoke(===elemental2.dom.MessageEvent<java.lang.Object>===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.dom.WebSocket.OnmessageFn",
      "classSimpleName": "OnmessageFn",
      "elementKind": "parameter",
      "methodName": "onInvoke",
      "newType": "elemental2.dom.MessageEvent<elemental2.dom.WebSocket.OnmessageFn.EventMessageEventTypeParameterUnionType>",
      "oldType": "elemental2.dom.MessageEvent<java.lang.Object>",
      "package": "elemental2.dom",
      "parameterIndex": "0"
    }
  }
]
