[
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Float32Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Float32Array",
      "classSimpleName": "Float32Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Float64Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Float64Array",
      "classSimpleName": "Float64Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Global.ActiveXObject",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Global",
      "classSimpleName": "Global",
      "elementKind": "field",
      "fieldName": "ActiveXObject",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Int16Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Int16Array",
      "classSimpleName": "Int16Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Int32Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Int32Array",
      "classSimpleName": "Int32Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Int8Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Int8Array",
      "classSimpleName": "Int8Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.hasInstance",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "hasInstance",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.isConcatSpreadable",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "isConcatSpreadable",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.match",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "match",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.matchAll",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "matchAll",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.replace",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "replace",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.search",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "search",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.species",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "species",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field elemental2.core.Symbol.toPrimitive",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Symbol",
      "classSimpleName": "Symbol",
      "elementKind": "field",
      "fieldName": "toPrimitive",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.TypedArray.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Uint16Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Uint16Array",
      "classSimpleName": "Uint16Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Uint32Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Uint32Array",
      "classSimpleName": "Uint32Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Uint8Array.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Uint8Array",
      "classSimpleName": "Uint8Array",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'int'.",
    "element": "field elemental2.core.Uint8ClampedArray.BYTES_PER_ELEMENT",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Uint8ClampedArray",
      "classSimpleName": "Uint8ClampedArray",
      "elementKind": "field",
      "fieldName": "BYTES_PER_ELEMENT",
      "newType": "int",
      "oldType": "double",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'R'.",
    "newElement": "method <S, R> R[] elemental2.core.JsArray<T>::map(elemental2.core.JsArray.MapCallbackFn<? extends R, ? super T>, S)",
    "oldElement": "method <R> R[] elemental2.core.JsArray<T>::map(elemental2.core.JsArray.MapCallbackFn<? extends R, ? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "map",
      "package": "elemental2.core",
      "typeParameter": "R"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method <S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>) @ elemental2.core.ITemplateArray",
    "oldElement": "method <T, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>) @ elemental2.core.ITemplateArray",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.core.ITemplateArray",
      "classSimpleName": "ITemplateArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method <S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>) @ elemental2.core.RegExpResult",
    "oldElement": "method <T, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>) @ elemental2.core.RegExpResult",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.core.RegExpResult",
      "classSimpleName": "RegExpResult",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method <S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>)",
    "oldElement": "method <T, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'S' was removed from the element.",
    "newElement": "method <S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>)",
    "oldElement": "method <T, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method <S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>)",
    "oldElement": "method <T, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <S> T elemental2.core.JsArray<T>::find(elemental2.core.JsArray.FindPredicateFn<? super T>, S)",
    "oldElement": "method T elemental2.core.JsArray<T>::find(elemental2.core.JsArray.FindPredicateFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "find",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'S'.",
    "newElement": "method <S> T elemental2.core.JsArray<T>::find(elemental2.core.JsArray.FindPredicateFn<? super T>, S)",
    "oldElement": "method T elemental2.core.JsArray<T>::find(elemental2.core.JsArray.FindPredicateFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "find",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <S> T[] elemental2.core.JsArray<T>::filter(elemental2.core.JsArray.FilterCallbackFn<? super T>, S)",
    "oldElement": "method T[] elemental2.core.JsArray<T>::filter(elemental2.core.JsArray.FilterCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "filter",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'S'.",
    "newElement": "method <S> T[] elemental2.core.JsArray<T>::filter(elemental2.core.JsArray.FilterCallbackFn<? super T>, S)",
    "oldElement": "method T[] elemental2.core.JsArray<T>::filter(elemental2.core.JsArray.FilterCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "filter",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <S> boolean elemental2.core.JsArray<T>::every(elemental2.core.JsArray.EveryCallbackFn<? super T>, S)",
    "oldElement": "method boolean elemental2.core.JsArray<T>::every(elemental2.core.JsArray.EveryCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "every",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'S'.",
    "newElement": "method <S> boolean elemental2.core.JsArray<T>::every(elemental2.core.JsArray.EveryCallbackFn<? super T>, S)",
    "oldElement": "method boolean elemental2.core.JsArray<T>::every(elemental2.core.JsArray.EveryCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "every",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <S> boolean elemental2.core.JsArray<T>::some(elemental2.core.JsArray.SomeCallbackFn<? super T>, S)",
    "oldElement": "method boolean elemental2.core.JsArray<T>::some(elemental2.core.JsArray.SomeCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "some",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'S'.",
    "newElement": "method <S> boolean elemental2.core.JsArray<T>::some(elemental2.core.JsArray.SomeCallbackFn<? super T>, S)",
    "oldElement": "method boolean elemental2.core.JsArray<T>::some(elemental2.core.JsArray.SomeCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "some",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'S' was removed from the element.",
    "newElement": "method <S> elemental2.core.TypedArray elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn, S)",
    "oldElement": "method <THIS, S> THIS elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn, S)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "filter",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method <S> elemental2.core.TypedArray elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn, S)",
    "oldElement": "method <THIS, S> THIS elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn, S)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "filter",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'S' was removed from the element.",
    "newElement": "method <S> elemental2.core.TypedArray elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn, S)",
    "oldElement": "method <THIS, S> THIS elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn, S)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "map",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method <S> elemental2.core.TypedArray elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn, S)",
    "oldElement": "method <THIS, S> THIS elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn, S)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "map",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <S> int elemental2.core.JsArray<T>::findIndex(elemental2.core.JsArray.FindIndexPredicateFn<? super T>, S)",
    "oldElement": "method int elemental2.core.JsArray<T>::findIndex(elemental2.core.JsArray.FindIndexPredicateFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "findIndex",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'S'.",
    "newElement": "method <S> int elemental2.core.JsArray<T>::findIndex(elemental2.core.JsArray.FindIndexPredicateFn<? super T>, S)",
    "oldElement": "method int elemental2.core.JsArray<T>::findIndex(elemental2.core.JsArray.FindIndexPredicateFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "findIndex",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <S> void elemental2.core.JsArray<T>::forEach(elemental2.core.JsArray.ForEachCallbackFn<? super T>, S)",
    "oldElement": "method void elemental2.core.JsArray<T>::forEach(elemental2.core.JsArray.ForEachCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "forEach",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'S'.",
    "newElement": "method <S> void elemental2.core.JsArray<T>::forEach(elemental2.core.JsArray.ForEachCallbackFn<? super T>, S)",
    "oldElement": "method void elemental2.core.JsArray<T>::forEach(elemental2.core.JsArray.ForEachCallbackFn<? super T>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "forEach",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'R'.",
    "newElement": "method <T, S, R> R[] elemental2.core.JsArray<T>::from(T[], elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, S)",
    "oldElement": "method <T, R> R[] elemental2.core.JsArray<T>::from(T[], elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "from",
      "package": "elemental2.core",
      "typeParameter": "R"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'R'.",
    "newElement": "method <T, S, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsArray.FromArrayLikeUnionType<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, S)",
    "oldElement": "method <T, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsArray.FromArrayLikeUnionType<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "from",
      "package": "elemental2.core",
      "typeParameter": "R"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'R'.",
    "newElement": "method <T, S, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsIterable<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, S)",
    "oldElement": "method <T, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsIterable<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "from",
      "package": "elemental2.core",
      "typeParameter": "R"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'R'.",
    "newElement": "method <T, S, R> R[] elemental2.core.JsArray<T>::from(java.lang.String, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, S)",
    "oldElement": "method <T, R> R[] elemental2.core.JsArray<T>::from(java.lang.String, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "from",
      "package": "elemental2.core",
      "typeParameter": "R"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'R'.",
    "newElement": "method <T, S, R> R[] elemental2.core.JsArray<T>::from(jsinterop.base.JsArrayLike<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, S)",
    "oldElement": "method <T, R> R[] elemental2.core.JsArray<T>::from(jsinterop.base.JsArrayLike<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "from",
      "package": "elemental2.core",
      "typeParameter": "R"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'RESULT'.",
    "newElement": "method <THIS, RESULT> RESULT elemental2.core.Reflect::apply(elemental2.core.Reflect.ApplyTargetFn<? extends RESULT>, THIS, java.lang.Object[])",
    "oldElement": "method <RESULT> RESULT elemental2.core.Reflect::apply(elemental2.core.Reflect.ApplyTargetFn<? extends RESULT>, java.lang.Object, java.lang.Object[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Reflect",
      "classSimpleName": "Reflect",
      "elementKind": "method",
      "methodName": "apply",
      "package": "elemental2.core",
      "typeParameter": "RESULT"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method <THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>, THIS) @ elemental2.core.ITemplateArray",
    "oldElement": "method <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>, THIS) @ elemental2.core.ITemplateArray",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.core.ITemplateArray",
      "classSimpleName": "ITemplateArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method <THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>, THIS) @ elemental2.core.RegExpResult",
    "oldElement": "method <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>, THIS) @ elemental2.core.RegExpResult",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.core.RegExpResult",
      "classSimpleName": "RegExpResult",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jsinterop.annotations.JsOverlay'.",
    "newElement": "method <THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>, THIS)",
    "oldElement": "method <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>, THIS)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsOverlay",
      "annotationType": "jsinterop.annotations.JsOverlay",
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'S' was removed from the element.",
    "newElement": "method <THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>, THIS)",
    "oldElement": "method <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>, THIS)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core",
      "typeParameter": "S"
    }
  },
  {
    "code": "java.method.noLongerFinal",
    "description": "Method is no longer final.",
    "newElement": "method <THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>, THIS)",
    "oldElement": "method <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>, THIS)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "newModifiers": "public native",
      "oldModifiers": "public final",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <THIS> java.lang.Object elemental2.core.JsMap<KEY, VALUE>::forEach(elemental2.core.JsMap.ForEachCallbackFn<? super KEY, ? super VALUE>, THIS)",
    "oldElement": "method java.lang.Object elemental2.core.JsMap<KEY, VALUE>::forEach(elemental2.core.JsMap.ForEachCallbackFn<? super KEY, ? super VALUE>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "forEach",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'THIS'.",
    "newElement": "method <THIS> java.lang.Object elemental2.core.JsMap<KEY, VALUE>::forEach(elemental2.core.JsMap.ForEachCallbackFn<? super KEY, ? super VALUE>, THIS)",
    "oldElement": "method java.lang.Object elemental2.core.JsMap<KEY, VALUE>::forEach(elemental2.core.JsMap.ForEachCallbackFn<? super KEY, ? super VALUE>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "forEach",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.generics.elementNowParameterized",
    "description": "Element now defines formal type parameters.",
    "newElement": "method <THIS> java.lang.Object elemental2.core.JsSet<VALUE>::forEach(elemental2.core.JsSet.ForEachCallbackFn<? super VALUE>, THIS)",
    "oldElement": "method java.lang.Object elemental2.core.JsSet<VALUE>::forEach(elemental2.core.JsSet.ForEachCallbackFn<? super VALUE>, java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "forEach",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterAdded",
    "description": "A new formal type parameter added to element: 'THIS'.",
    "newElement": "method <THIS> java.lang.Object elemental2.core.JsSet<VALUE>::forEach(elemental2.core.JsSet.ForEachCallbackFn<? super VALUE>, THIS)",
    "oldElement": "method java.lang.Object elemental2.core.JsSet<VALUE>::forEach(elemental2.core.JsSet.ForEachCallbackFn<? super VALUE>, java.lang.Object)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "forEach",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'S extends java.lang.Object' to 'S extends java.lang.Object[]'.",
    "newElement": "method S[] elemental2.core.JsArray.FlatMapCallbackFn<S, T>::onInvoke(T, double, T[])",
    "oldElement": "method S elemental2.core.JsArray.FlatMapCallbackFn<T, S>::onInvoke(T, double, T[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray.FlatMapCallbackFn",
      "classSimpleName": "FlatMapCallbackFn",
      "elementKind": "method",
      "methodName": "onInvoke",
      "newType": "S extends java.lang.Object[]",
      "oldType": "S extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'S extends java.lang.Object' to 'S extends java.lang.Object[]'.",
    "newElement": "method S[] elemental2.core.JsArray.FlatMapCallbackFn<S, T>::onInvoke(T, double, jsinterop.base.JsArrayLike<T>)",
    "oldElement": "method S elemental2.core.JsArray.FlatMapCallbackFn<T, S>::onInvoke(T, double, jsinterop.base.JsArrayLike<T>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray.FlatMapCallbackFn",
      "classSimpleName": "FlatMapCallbackFn",
      "elementKind": "method",
      "methodName": "onInvoke",
      "newType": "S extends java.lang.Object[]",
      "oldType": "S extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "element": "method elemental2.core.Function elemental2.core.JsObject::__lookupGetter__(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.core.JsObject",
      "classSimpleName": "JsObject",
      "elementKind": "method",
      "methodName": "__lookupGetter__",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "element": "method elemental2.core.Function elemental2.core.JsObject::__lookupSetter__(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.core.JsObject",
      "classSimpleName": "JsObject",
      "elementKind": "method",
      "methodName": "__lookupSetter__",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::copyWithin(int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::copyWithin(int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "copyWithin",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::copyWithin(int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::copyWithin(int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "copyWithin",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::copyWithin(int, int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::copyWithin(int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "copyWithin",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::copyWithin(int, int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::copyWithin(int, int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "copyWithin",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::fill(double)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::fill(double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "fill",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::fill(double)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::fill(double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "fill",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::fill(double, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::fill(double, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "fill",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::fill(double, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::fill(double, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "fill",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::fill(double, int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::fill(double, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "fill",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::fill(double, int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::fill(double, int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "fill",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "filter",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::filter(elemental2.core.TypedArray.FilterCallbackFn)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "filter",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "map",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::map(elemental2.core.TypedArray.MapCallbackFn)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "map",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::reverse()",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::reverse()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "reverse",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::reverse()",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::reverse()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "reverse",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::slice()",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::slice()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::slice()",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::slice()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "slice",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::slice(int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::slice(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::slice(int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::slice(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "slice",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::slice(int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::slice(int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::slice(int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::slice(int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "slice",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::sort()",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::sort()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "sort",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::sort()",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::sort()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "sort",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::sort(elemental2.core.TypedArray.SortCompareFunctionFn)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::sort(elemental2.core.TypedArray.SortCompareFunctionFn)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "sort",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::sort(elemental2.core.TypedArray.SortCompareFunctionFn)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::sort(elemental2.core.TypedArray.SortCompareFunctionFn)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "sort",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::subarray(int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::subarray(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "subarray",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::subarray(int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::subarray(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "subarray",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.generics.formalTypeParameterRemoved",
    "description": "The formal type parameter 'THIS' was removed from the element.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::subarray(int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::subarray(int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "subarray",
      "package": "elemental2.core",
      "typeParameter": "THIS"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'THIS extends java.lang.Object' to 'elemental2.core.TypedArray'.",
    "newElement": "method elemental2.core.TypedArray elemental2.core.TypedArray::subarray(int, int)",
    "oldElement": "method <THIS> THIS elemental2.core.TypedArray::subarray(int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.TypedArray",
      "classSimpleName": "TypedArray",
      "elementKind": "method",
      "methodName": "subarray",
      "newType": "elemental2.core.TypedArray",
      "oldType": "THIS extends java.lang.Object",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.Object elemental2.core.JsObject::__noSuchMethod__(elemental2.core.Function)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsObject",
      "classSimpleName": "JsObject",
      "elementKind": "method",
      "methodName": "__noSuchMethod__",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "element": "method void elemental2.core.JsObject::__defineGetter__(java.lang.String, elemental2.core.Function)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.core.JsObject",
      "classSimpleName": "JsObject",
      "elementKind": "method",
      "methodName": "__defineGetter__",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.element.nowDeprecated",
    "description": "The element is now deprecated.",
    "element": "method void elemental2.core.JsObject::__defineSetter__(java.lang.String, elemental2.core.Function)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.Deprecated",
      "annotationType": "java.lang.Deprecated",
      "classQualifiedName": "elemental2.core.JsObject",
      "classSimpleName": "JsObject",
      "elementKind": "method",
      "methodName": "__defineSetter__",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface elemental2.core.JsArray.FlatMapCallbackUnionType<T extends java.lang.Object, S extends java.lang.Object>",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray.FlatMapCallbackUnionType",
      "classSimpleName": "FlatMapCallbackUnionType",
      "elementKind": "interface",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T, S> S[] elemental2.core.JsArray<T>::flatMap(S[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackUnionType<T, S>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(S[], THIS)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(elemental2.core.JsArray.FlatMapCallbackUnionType<T, S>, THIS)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flatMap",
      "package": "elemental2.core"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <S, R> R[] elemental2.core.JsArray<T>::map(elemental2.core.JsArray.MapCallbackFn<? extends R, ? super T>, ===S===)",
    "oldElement": "parameter <R> R[] elemental2.core.JsArray<T>::map(elemental2.core.JsArray.MapCallbackFn<? extends R, ? super T>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "map",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.Object' to 'double'.",
    "newElement": "parameter <S> S[] elemental2.core.JsArray<T>::flat(===double===)",
    "oldElement": "parameter <S> S[] elemental2.core.JsArray<T>::flat(===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "flat",
      "newType": "double",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'elemental2.core.JsArray.FlatMapCallbackFn<T extends java.lang.Object, ? extends S extends java.lang.Object>'while the new type is 'elemental2.core.JsArray.FlatMapCallbackFn<? extends S extends java.lang.Object, T extends java.lang.Object>'.",
    "newElement": "parameter <S> S[] elemental2.core.JsArray<T>::flatMap(===elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>===)",
    "oldElement": "parameter <T, S> S[] elemental2.core.JsArray<T>::flatMap(===elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "flatMap",
      "newType": "elemental2.core.JsArray.FlatMapCallbackFn<? extends S extends java.lang.Object, T extends java.lang.Object>",
      "oldType": "elemental2.core.JsArray.FlatMapCallbackFn<T extends java.lang.Object, ? extends S extends java.lang.Object>",
      "package": "elemental2.core",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <S> T elemental2.core.JsArray<T>::find(elemental2.core.JsArray.FindPredicateFn<? super T>, ===S===)",
    "oldElement": "parameter T elemental2.core.JsArray<T>::find(elemental2.core.JsArray.FindPredicateFn<? super T>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "find",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <S> T[] elemental2.core.JsArray<T>::filter(elemental2.core.JsArray.FilterCallbackFn<? super T>, ===S===)",
    "oldElement": "parameter T[] elemental2.core.JsArray<T>::filter(elemental2.core.JsArray.FilterCallbackFn<? super T>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "filter",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <S> boolean elemental2.core.JsArray<T>::every(elemental2.core.JsArray.EveryCallbackFn<? super T>, ===S===)",
    "oldElement": "parameter boolean elemental2.core.JsArray<T>::every(elemental2.core.JsArray.EveryCallbackFn<? super T>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "every",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <S> boolean elemental2.core.JsArray<T>::some(elemental2.core.JsArray.SomeCallbackFn<? super T>, ===S===)",
    "oldElement": "parameter boolean elemental2.core.JsArray<T>::some(elemental2.core.JsArray.SomeCallbackFn<? super T>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "some",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <S> int elemental2.core.JsArray<T>::findIndex(elemental2.core.JsArray.FindIndexPredicateFn<? super T>, ===S===)",
    "oldElement": "parameter int elemental2.core.JsArray<T>::findIndex(elemental2.core.JsArray.FindIndexPredicateFn<? super T>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "findIndex",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <S> void elemental2.core.JsArray<T>::forEach(elemental2.core.JsArray.ForEachCallbackFn<? super T>, ===S===)",
    "oldElement": "parameter void elemental2.core.JsArray<T>::forEach(elemental2.core.JsArray.ForEachCallbackFn<? super T>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "forEach",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <T, S, R> R[] elemental2.core.JsArray<T>::from(T[], elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===S===)",
    "oldElement": "parameter <T, R> R[] elemental2.core.JsArray<T>::from(T[], elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "from",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <T, S, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsArray.FromArrayLikeUnionType<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===S===)",
    "oldElement": "parameter <T, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsArray.FromArrayLikeUnionType<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "from",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <T, S, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsIterable<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===S===)",
    "oldElement": "parameter <T, R> R[] elemental2.core.JsArray<T>::from(elemental2.core.JsIterable<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "from",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <T, S, R> R[] elemental2.core.JsArray<T>::from(java.lang.String, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===S===)",
    "oldElement": "parameter <T, R> R[] elemental2.core.JsArray<T>::from(java.lang.String, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "from",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'S extends java.lang.Object'.",
    "newElement": "parameter <T, S, R> R[] elemental2.core.JsArray<T>::from(jsinterop.base.JsArrayLike<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===S===)",
    "oldElement": "parameter <T, R> R[] elemental2.core.JsArray<T>::from(jsinterop.base.JsArrayLike<T>, elemental2.core.JsArray.FromMapFn<? super T, ? extends R>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "from",
      "newType": "S extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'THIS extends java.lang.Object'.",
    "newElement": "parameter <THIS, RESULT> RESULT elemental2.core.Reflect::apply(elemental2.core.Reflect.ApplyTargetFn<? extends RESULT>, ===THIS===, java.lang.Object[])",
    "oldElement": "parameter <RESULT> RESULT elemental2.core.Reflect::apply(elemental2.core.Reflect.ApplyTargetFn<? extends RESULT>, ===java.lang.Object===, java.lang.Object[])",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.Reflect",
      "classSimpleName": "Reflect",
      "elementKind": "parameter",
      "methodName": "apply",
      "newType": "THIS extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'elemental2.core.JsArray.FlatMapCallbackFn<T extends java.lang.Object, ? extends S extends java.lang.Object>'while the new type is 'elemental2.core.JsArray.FlatMapCallbackFn<? extends S extends java.lang.Object, T extends java.lang.Object>'.",
    "newElement": "parameter <THIS, S> S[] elemental2.core.JsArray<T>::flatMap(===elemental2.core.JsArray.FlatMapCallbackFn<? extends S, T>===, THIS)",
    "oldElement": "parameter <T, THIS, S> S[] elemental2.core.JsArray<T>::flatMap(===elemental2.core.JsArray.FlatMapCallbackFn<T, ? extends S>===, THIS)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "flatMap",
      "newType": "elemental2.core.JsArray.FlatMapCallbackFn<? extends S extends java.lang.Object, T extends java.lang.Object>",
      "oldType": "elemental2.core.JsArray.FlatMapCallbackFn<T extends java.lang.Object, ? extends S extends java.lang.Object>",
      "package": "elemental2.core",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'THIS extends java.lang.Object'.",
    "newElement": "parameter <THIS> java.lang.Object elemental2.core.JsMap<KEY, VALUE>::forEach(elemental2.core.JsMap.ForEachCallbackFn<? super KEY, ? super VALUE>, ===THIS===)",
    "oldElement": "parameter java.lang.Object elemental2.core.JsMap<KEY, VALUE>::forEach(elemental2.core.JsMap.ForEachCallbackFn<? super KEY, ? super VALUE>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "parameter",
      "methodName": "forEach",
      "newType": "THIS extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object'while the new type is 'THIS extends java.lang.Object'.",
    "newElement": "parameter <THIS> java.lang.Object elemental2.core.JsSet<VALUE>::forEach(elemental2.core.JsSet.ForEachCallbackFn<? super VALUE>, ===THIS===)",
    "oldElement": "parameter java.lang.Object elemental2.core.JsSet<VALUE>::forEach(elemental2.core.JsSet.ForEachCallbackFn<? super VALUE>, ===java.lang.Object===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "parameter",
      "methodName": "forEach",
      "newType": "THIS extends java.lang.Object",
      "oldType": "java.lang.Object",
      "package": "elemental2.core",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.method.parameterTypeParameterChanged",
    "description": "The type parameter of method parameter changed. The original type was 'java.lang.Object[]'while the new type is 'T extends java.lang.Object[]'.",
    "newElement": "parameter void elemental2.core.JsArray<T>::<init>(===T[]===)",
    "oldElement": "parameter void elemental2.core.JsArray<T>::<init>(===java.lang.Object[]===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "elemental2.core.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "parameter",
      "methodName": "<init>",
      "newType": "T extends java.lang.Object[]",
      "oldType": "java.lang.Object[]",
      "package": "elemental2.core",
      "parameterIndex": "0"
    }
  }
]
